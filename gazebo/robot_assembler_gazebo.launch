<launch>
  <arg name="model"  default="" />
  <arg name="paused" default="false" />
  <!--arg name="gzangles" default="-J JOINT0 -0.2" / use with paused -->
  <arg name="gzangles" default="" />
  <arg name="gzpose" default=" -z 0.38" />
  <arg name="control_config" default="$(arg model).gz_controller.yaml" />

  <arg name="world_name" default="$(find robot_assembler)/world/robot_assebmler_test.world" />
  <arg name="use_xacro" default="false" />
  <arg name="plot" default="false"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch" >
    <arg name="paused" value="$(arg paused)" />
    <arg name="world_name" value="$(arg world_name)" />
    <arg name="verbose" value="true"/>
  </include>

  <!-- Load universal robotic description format (URDF) -->
  <param if=    "$(arg use_xacro)" name="robot_description" command="$(find xacro)/xacro '$(arg model).xacro'" />
  <param unless="$(arg use_xacro)" name="robot_description" command="$(find xacro)/xacro '$(arg model)'" />

  <node pkg="gazebo_ros" type="spawn_model" name="urdf_spawner"
        respawn="false" output="screen"
        args="$(arg gzangles) $(arg gzpose) -urdf -model AssembledRobot -param robot_description" />

  <!-- convert joint states to TF transforms -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
        respawn="false" output="screen" />

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(arg control_config)" command="load"/>
  <!-- load the controllers -->
  <node name="controller_spawner" pkg="controller_manager"
        type="spawner" respawn="false" ns="/wheeled_robot"
        output="screen" args="joint0_position_controller
                              joint1_position_controller
                              joint2_position_controller
                              joint3_position_controller
                              joint4_position_controller
                              joint5_position_controller
                              joint6_position_controller
                              joint7_position_controller
                              joint8_position_controller
                              joint9_position_controller
                              joint10_position_controller
                              joint11_position_controller
                              joint12_position_controller
                              joint13_position_controller
                              joint_state_controller
                              --shutdown-timeout 0.1"/>


  <!-- plotjuggler -->
  <group if="$(arg plot)">
    <node name="plotjuggler_with_layout"
          pkg="plotjuggler"
          type="PlotJuggler"
          args="--layout $(find robot_assembler)/config/simple_wheels.xml -n"/>
  </group>

</launch>
